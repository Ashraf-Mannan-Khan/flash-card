{"ast":null,"code":"import React,{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import{v4 as uuidv4}from\"uuid\";import ROUTES from\"../app/routes\";// import selectors\nimport{addQuiz}from'../features/quizzes/quizSlice';import{selectTopics}from\"../features/topics/topicsSlice\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function NewQuizForm(){const[name,setName]=useState(\"\");const[cards,setCards]=useState([]);const[topicId,setTopicId]=useState(\"\");const navigate=useNavigate();const topics=useSelector(selectTopics);// Replace with topics \nconst dispatch=useDispatch();const handleSubmit=e=>{e.preventDefault();if(name.length===0){return;}const cardIds=[];// create the new cards here and add each card's id to cardIds\n// create the new quiz here\nconst quizId=uuidv4();// dispatch add quiz action \ndispatch(addQuiz({id:quizId,name,topicId,cardIds}));navigate(ROUTES.quizzesRoute());};const addCardInputs=e=>{e.preventDefault();setCards(cards.concat({front:\"\",back:\"\"}));};const removeCard=(e,index)=>{e.preventDefault();setCards(cards.filter((card,i)=>index!==i));};const updateCardState=(index,side,value)=>{const newCards=cards.slice();newCards[index][side]=value;setCards(newCards);};return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create a new quiz\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{id:\"quiz-name\",value:name,onChange:e=>setName(e.currentTarget.value),placeholder:\"Quiz Title\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"quiz-topic\",onChange:e=>setTopicId(e.currentTarget.value),placeholder:\"Topic\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Topic\"}),Object.values(topics).map(topic=>/*#__PURE__*/_jsx(\"option\",{value:topic.id,children:topic.name},topic.id))]}),cards.map((card,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card-front-back\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"card-front-\".concat(index),value:cards[index].front,onChange:e=>updateCardState(index,\"front\",e.currentTarget.value),placeholder:\"Front\"}),/*#__PURE__*/_jsx(\"input\",{id:\"card-back-\".concat(index),value:cards[index].back,onChange:e=>updateCardState(index,\"back\",e.currentTarget.value),placeholder:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>removeCard(e,index),className:\"remove-card-button\",children:\"Remove Card\"})]},index)),/*#__PURE__*/_jsxs(\"div\",{className:\"actions-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:addCardInputs,children:\"Add a Card\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Quiz\"})]})]})]});}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","v4","uuidv4","ROUTES","addQuiz","selectTopics","jsx","_jsx","jsxs","_jsxs","NewQuizForm","name","setName","cards","setCards","topicId","setTopicId","navigate","topics","dispatch","handleSubmit","e","preventDefault","length","cardIds","quizId","id","quizzesRoute","addCardInputs","concat","front","back","removeCard","index","filter","card","i","updateCardState","side","value","newCards","slice","children","onSubmit","onChange","currentTarget","placeholder","Object","values","map","topic","className","onClick","type"],"sources":["/Users/ashrafkhan/Downloads/flashcards/src/components/NewQuizForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n// import selectors\nimport {addQuiz} from '../features/quizzes/quizSlice';\nimport {selectTopics} from \"../features/topics/topicsSlice\";\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = useSelector(selectTopics);  // Replace with topics \n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    const quizId = uuidv4();\n\n    // dispatch add quiz action \n    dispatch(addQuiz({ id: quizId, name, topicId, cardIds }));\n    navigate(ROUTES.quizzesRoute())\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button type=\"submit\">Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}